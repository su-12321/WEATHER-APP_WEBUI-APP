# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # 在推送到主分支时运行
  push:
    branches: ["main"]

  # 允许从 Actions 选项卡手动运行此工作流
  workflow_dispatch:

  # 添加定时触发器（每6小时运行一次）
  schedule:
    - cron: '0 */6 * * *'

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 允许只有一个并发部署，跳过在运行中和最新排队之间的运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 单一部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # 从私有仓库获取天气数据并放置在根目录
      - name: Fetch weather data to root directory
        run: |
          echo "正在从私有仓库获取天气数据..."
          
          # 使用 GitHub API 直接下载 weather_data.json 文件到根目录
          curl -s -H "Authorization: token ${{ secrets.TOKEN_ }}" \
            -H "Accept: application/vnd.github.v3.raw" \
            -o weather_data.json \
            https://api.github.com/repos/su-12321/weather-/contents/weather_data.json
          
          # 验证文件是否成功下载
          if [ -f "weather_data.json" ]; then
            echo "✅ 天气数据文件已成功下载到根目录"
            echo "文件大小: $(wc -c < weather_data.json) 字节"
            echo "文件内容前几行:"
            head -n 3 weather_data.json
          else
            echo "❌ 天气数据文件下载失败"
            exit 1
          fi
          
          # 列出根目录内容以验证文件位置
          echo "根目录内容:"
          ls -la | grep -E "(weather_data.json|index.html)"
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 上传整个仓库（现在根目录包含 weather_data.json）
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      # 添加部署验证步骤
      - name: Verify deployment
        run: |
          echo "部署完成，页面URL: ${{ steps.deployment.outputs.page_url }}"
          echo "等待几秒钟让部署生效..."
          sleep 10
          echo "尝试访问根目录的天气数据文件:"
          curl -s "${{ steps.deployment.outputs.page_url }}/weather_data.json" | head -n 3 || echo "无法访问 weather_data.json"
